## Work flow
name: Test and deploy

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - develop

jobs:

  build:
    needs: [ unit_tests, android_tests ]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: setup java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: create env file
        run: |
          cat >env.properties <<EOL
          STORE_FILE=${{ secrets.STORE_FILE }}
          STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS=${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}
          GRAPHQL_URL=${{ secrets.GRAPHQL_URL }}
          EOL
      - name: Create key store
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > release.keystore.asc
          gpg -d --passphrase "${{ secrets.KEY_PASSWORD }}" --batch release.keystore.asc > app/release.keystore.jks

      - name: Generate Release APK
        run: ./gradlew assembleRelease

      - name: Sign APK
        uses: ilharp/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDir: app/build/outputs/apk/release
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          buildToolsVersion: 33.0.0

      - uses: actions/upload-artifact@master
        with:
          name: release.apk
          path: ${{steps.sign_app.outputs.signedFile}}
      - name: ls
        run: |
          ls
          ls app/

      - uses: actions/upload-artifact@master
        with:
          name: mapping.txt
          path: app/build/outputs/mapping/release/mapping.txt

  unit_tests:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: setup java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: create env file
        run: |
          cat >env.properties <<EOL
          STORE_FILE=${{ secrets.STORE_FILE }}
          STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS=${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}
          GRAPHQL_URL=${{ secrets.GRAPHQL_URL }}
          EOL
      - name: Create key store
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > release.keystore.asc
          gpg -d --passphrase "${{ secrets.KEY_PASSWORD }}" --batch release.keystore.asc > app/release.keystore.jks

      - name: Unit tests
        run: |
          ./gradlew test

  android_tests:
    runs-on: [ macos-latest ]
    steps:
      - uses: actions/checkout@v4
      - name: setup java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: create env file
        run: |
          cat >env.properties <<EOL
          STORE_FILE=${{ secrets.STORE_FILE }}
          STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS=${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}
          GRAPHQL_URL=${{ secrets.GRAPHQL_URL }}
          EOL
      - name: Create key store
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > release.keystore.asc
          gpg -d --passphrase "${{ secrets.KEY_PASSWORD }}" --batch release.keystore.asc > app/release.keystore.jks
          ls app/

      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 26
          script: ./gradlew connectedAndroidTest
  deploy-firebase:
    # 1
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      # 2
      - name: list
        run: ls
      - name: checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@master
        with:
          name: release.apk
      #3
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: Devs
          file: app-release-signed.apk

